#+Title: How can I access the current KEY when iterating a dict in mustache from cfengine
#+AUTHOR: Nick Anderson
#+DATE: 2019-05-20
#+TAGS[]: cfengine

#+BEGIN_QUOTE
Can I access the current KEY when iterating in Mustache?
#+END_QUOTE

Yes, CFEngine's implementation of mustache includes an extension to be able to
access the current key when iterating. =@= expands the current key being
iterated.

This example defines =d= as a simple json data structure with =index-1= and
=index-2= being top level keys. The mustache template iterates over the entirety
of the structure leveraging =-top-= (another cfengine specific extension to
mustache) and prints the key using =@=. Note the use of three curly braces. This
is per the mustache spec to ensure that the rendered value is *not* html escaped
(not usually what you want in the context of rendering configuration files).

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent example
  {
    vars:

        'd' data => '{
    "index-1": {
      "value": "one"
    },
    "index-2": {
      "value": "two"
    }
  }';

    reports:
        "CFEngine $(sys.cf_version)"; 
        "$(with)"
          with => string_mustache( "Iterate over -top- and print keys:$(const.n){{#-top-}}{{{@}}}$(const.n){{/-top-}}", d );
  }
  bundle agent __main__
  {
    methods: "example";
  }
#+END_SRC

Policy Output:

#+RESULTS:
: R: CFEngine 3.14.0a.4e12fcf75
: R: Iterate over -top- and print keys:
: index-1
: index-2
: 

