<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Session on </title>
    <link>http://www.cmdln.org/tags/session/</link>
    <description>Recent content in Session on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 20 Jul 2007 14:07:53 +0000</lastBuildDate>
    
	<atom:link href="http://www.cmdln.org/tags/session/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automatic session logging and monitoring with GNU screen for the paranoid.</title>
      <link>http://www.cmdln.org/2007/07/20/automatic-session-logging-and-monitoring-with-gnu-screen-for-the-paranoid/</link>
      <pubDate>Fri, 20 Jul 2007 14:07:53 +0000</pubDate>
      
      <guid>http://www.cmdln.org/2007/07/20/automatic-session-logging-and-monitoring-with-gnu-screen-for-the-paranoid/</guid>
      <description>&lt;p&gt;Yes its been a while since I have checked in. Sorry I&amp;#8217;ve just been too busy. But I have a great tip this time. Recently I had the need to do automatic session logging. A 3rd party was going to be logging into one of my servers to check out some software glitches that were happening. I love using GNU Screen for many shell tasks so using it for monitoring was logical. Screen is great for several reasons. First you can detach from it so you can leave the office, go home and re-attach and not have lost your place. Second, you can share another screen. It can be shared input or you can just watch what someone else is doing. Finally screen can do native logging. I wanted to automattically launch a screen session when somone logged in so if I happened to be on the server I could monitor them in real time. I also wanted a log of the session in case I wanted to look over it later or if I was not able to monitor the session live.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>