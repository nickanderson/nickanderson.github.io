<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zenoss on </title>
    <link>https://nickanderson.github.io/tags/zenoss/</link>
    <description>Recent content in Zenoss on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 06 Dec 2012 15:01:13 +0000</lastBuildDate>
    
	<atom:link href="https://nickanderson.github.io/tags/zenoss/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Tip: Drilling into zenoss data with zendmd</title>
      <link>https://nickanderson.github.io/2012/12/06/quick-tip-drilling-into-zenoss-data-with-zendmd/</link>
      <pubDate>Thu, 06 Dec 2012 15:01:13 +0000</pubDate>
      
      <guid>https://nickanderson.github.io/2012/12/06/quick-tip-drilling-into-zenoss-data-with-zendmd/</guid>
      <description>Sometimes you want to know what value zenoss has for something. The numbers sent in alerts seem to be the value that zenoss has, but the graphs are usually formatted to make more sense. 1394606080 might come in an alert, but on the graph it would show as 1.3 or 1.4G. It can cause some slight confusion when other people expect 90% of 1.4G instead of 90% of 1394606080 to be an alert threshold.</description>
    </item>
    
    <item>
      <title>CheckDomain Zenpack</title>
      <link>https://nickanderson.github.io/2010/07/12/checkdomain-zenpack/</link>
      <pubDate>Mon, 12 Jul 2010 15:52:44 +0000</pubDate>
      
      <guid>https://nickanderson.github.io/2010/07/12/checkdomain-zenpack/</guid>
      <description>No one likes to forget to renew a domain. Its not wholly uncommon though. Microsoft forgot to renew passport.com in 1999, and hotmail.co.uk in 2003. Vivendi Universal forgot to renew its MP3.com in 2003, the Washington Post forgot to renew in 2004, and Foursquare forgot to renew their domain in 2010.
I stumbled on the check_domain nagios plugin this weekend so I figured I would make some quick modifications and roll it into a Zenpack.</description>
    </item>
    
    <item>
      <title>Nginx stub_status Zenpack</title>
      <link>https://nickanderson.github.io/2010/07/09/nginx-stub_status-zenpack/</link>
      <pubDate>Fri, 09 Jul 2010 23:41:53 +0000</pubDate>
      
      <guid>https://nickanderson.github.io/2010/07/09/nginx-stub_status-zenpack/</guid>
      <description>Nginx is a great little web server. I have posted previously about using it as a reverse proxy. Weather your using it as a reverse proxy or as a normal webserver you will probably eventually want to know what its doing over time so you can adjust resources as necessary.
The other day I threw together a Zenpack to make it easier to setup monitoring on new Zenoss instances. It contains a command data source &amp;#8220;check_nginx_ng&amp;#8221; which is a slightly modified version of Chris Kellys check_nginx_ng which in turn was based on check_nginx by Mike Adolphs.</description>
    </item>
    
    <item>
      <title>Monitoring A/B PDU Load with Zenoss</title>
      <link>https://nickanderson.github.io/2010/06/12/monitoring-ab-pdu-load-with-zenoss/</link>
      <pubDate>Sun, 13 Jun 2010 01:19:18 +0000</pubDate>
      
      <guid>https://nickanderson.github.io/2010/06/12/monitoring-ab-pdu-load-with-zenoss/</guid>
      <description>Redundant power is a necessity for any highly available system. Most servers have redundant power supplies and the common design pattern is to have each power supply plugged into a power distribution units that are on separate circuits. One challenge with this type of dealing with this type of design is monitoring the power load.
Monitoring A/B power is not as easy as monitoring the individual PDUs. Some servers will draw power from both power supplies, other will draw from one or the other.</description>
    </item>
    
    <item>
      <title>Notes on Zenoss ZenPacks</title>
      <link>https://nickanderson.github.io/2010/05/24/notes-on-zenoss-zenpacks/</link>
      <pubDate>Mon, 24 May 2010 20:00:20 +0000</pubDate>
      
      <guid>https://nickanderson.github.io/2010/05/24/notes-on-zenoss-zenpacks/</guid>
      <description>Recently I was building a ZenPack for Zenoss. The ZenPack included an Event Command which executed a custom script. I wanted to store the custom script in the ZenPack and I didn&amp;#8217;t want to do anything other than have proper script dependencies in place for it to work.
${here/ZenPackManager/packs/ZenPacks.community.YOURZENPACK/path}/libexec/yourscript.sh ${dev/manageIp}  Custom scripts can be placed in $ZENHOME/ZenPacks/ZenPacks.CompanyName.Package/Zenpacks/CompanyName/Package/lib but if you want them to be executable place them in libexec.</description>
    </item>
    
    <item>
      <title>Sysstat Sar Performance Metrics Via Nagios Plugin</title>
      <link>https://nickanderson.github.io/2010/03/09/sysstat-sar-performance-metrics-via-nagios-plugin/</link>
      <pubDate>Tue, 09 Mar 2010 15:42:06 +0000</pubDate>
      
      <guid>https://nickanderson.github.io/2010/03/09/sysstat-sar-performance-metrics-via-nagios-plugin/</guid>
      <description>I know I&amp;#8217;ve mentioned how much I love the sysstat package before. I use sar regularly to help with performance diagnostics (Analyzing Linux System Performance And Finding Bottle Necks, CPU Performance Analysis In Linux, Baseline Analysis Is Important, CPU Performance Analysis In Linux Revisited). I wrote this little Nagios plugin to collect the performance metrics that sar collects.
I use this plugin with Zenoss and I set any performance thresholds there, more important to me was collecting the information for historical graphing.</description>
    </item>
    
  </channel>
</rss>